{"version":3,"sources":["./src/app/search-by-cuisine/search-by-cuisine.component.html","./src/app/search-by-cuisine/search-by-cuisine.component.ts","./src/app/user-account-page/user-account-page.component.html","./src/app/user-account-page/user-account-page.component.ts","./src/app/user-api.service.ts","./src/environments/environment.ts","./src/app/review-api.service.ts","./src/app/search-by-ingredients/search-by-ingredients.component.html","./src/app/search-by-ingredients/search-by-ingredients.component.ts","./src/app/ingredient-api.service.ts","./src/app/show-recipe/show-recipe.component.ts","./src/app/show-recipe/show-recipe.component.html","./src/app/homepage/homepage.component.html","./src/app/homepage/homepage.component.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/recipe-api-service.ts","./src/app/app.module.ts","./src/app/login-page/login-page.component.ts","./src/app/login-page/login-page.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<br>\r\n<br>\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <div class=\"input-group\">\r\n                <input type=\"text\" id=\"cuisine\" #cuisine class=\"form-control\" placeholder=\"Cuisine\" aria-label=\"Cuisine\" aria-describedby=\"basic-addon1\">\r\n                &nbsp;\r\n                <button (click)=\"searchRecipe(cuisine.value)\" class=\"btn btn-dark\">Search</button> \r\n            </div>\r\n            <br>\r\n            <br>\r\n    \r\n            <h5 class=\"card-title\" >Recently Viewed Recipe List</h5>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\" > </div>\r\n            </div>\r\n            <br>\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n            <div>\r\n                <ul class=\"list-group\" *ngIf=\"foundCuisine\">\r\n                     <li class=\"list-group-item\">\r\n                        <a [routerLink]=\"['/showRecipe', result.recipeId]\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-3\">\r\n                                    <img src=\"{{result.recipeImage}}\" alt=\"\" class=\"img-thumbnail\"/>\r\n                                </div>\r\n                                <div class=\"col-md-9\">\r\n                                    <div class=\"result-text\">\r\n                                        <p>{{result.recipeName}}</p>\r\n                                        <p>Rating: <i *ngFor=\"let rate of [].constructor(result.avgRate)\" id=\"star-icon\" class=\"fas fa-star\"></i></p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { RecipeApiService} from '../recipe-api-service';\r\n\r\n@Component({\r\n  selector: 'app-search-by-cuisine',\r\n  templateUrl: './search-by-cuisine.component.html',\r\n  styleUrls: ['./search-by-cuisine.component.css']\r\n})\r\nexport class SearchByCuisineComponent {\r\n  public recipeApiService: RecipeApiService;\r\n  public result: any;\r\n  foundCuisine: boolean;\r\n\r\n  constructor(service: RecipeApiService) { \r\n    this.recipeApiService = service;\r\n    this.result = null;\r\n    this.foundCuisine = false;\r\n  }\r\n\r\n  searchRecipe(cuisine){\r\n    if (cuisine.length) {\r\n      this.recipeApiService.searchByCuisine(cuisine).subscribe((result: any) => {\r\n        this.result = result;\r\n        this.foundCuisine = true;\r\n        console.warn(result);\r\n      })\r\n    } else {\r\n      this.foundCuisine = false;\r\n      this.result = null;\r\n    }\r\n  }\r\n}","<div class=\"container\">\r\n    <div class=\"main-body\">\r\n    \r\n          <nav aria-label=\"breadcrumb\" class=\"main-breadcrumb\" *ngIf = false>\r\n            <ol class=\"breadcrumb\">\r\n              <li class=\"breadcrumb-item\"><a href=\"index.html\">Home</a></li>\r\n              <li class=\"breadcrumb-item\"><a href=\"javascript:void(0)\">User</a></li>\r\n              <li class=\"breadcrumb-item active\" aria-current=\"page\">User Profile</li>\r\n            </ol>\r\n          </nav>\r\n    \r\n          <div class=\"row gutters-sm\">\r\n            <div class=\"col-md-4 mb-3\">\r\n              <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                  <div class=\"d-flex flex-column align-items-center text-center\">\r\n                    <img src=\"https://img.icons8.com/cotton/2x/gender-neutral-user--v2.png\" alt=\"Admin\" class=\"rounded-circle\" width=\"150\">\r\n                    <div class=\"mt-3\">\r\n                      <h4> {{name}}</h4>\r\n                      <button class=\"btn btn-primary\" (click)=\"logMeOut()\">log out</button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-8\">\r\n              <div class=\"card mb-3\">\r\n                <div class=\"card-body\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-3\">\r\n                      <h6 class=\"mb-0\">Full Name</h6>\r\n                    </div>\r\n                    <div class=\"col-sm-9 text-secondary\">\r\n                      {{name}}\r\n                    </div>\r\n                  </div>\r\n                  <hr>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-sm-3\">\r\n                      <h6 class=\"mb-0\">Email</h6>\r\n                    </div>\r\n                    <div class=\"col-sm-9 text-secondary\">\r\n                      {{email}}\r\n                    </div>\r\n                  </div>\r\n                  <hr>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <h2>Favorite List:</h2>\r\n                <br />\r\n                <div class=\"col-sm-3 mb-3\" *ngFor=\"let recipe of listOfFavoritesAsRecipes; let i = index\">\r\n                  <div class=\"card border-dark\" id=\"homepagecard\">\r\n                    <a [routerLink]=\"['/showRecipe', recipe.recipeId]\">\r\n                      <img class=\"card-img-top\" src={{recipe.recipeImage}} alt=\"Card image cap\" width=\"100\" height=\"250\">\r\n                    </a>\r\n                      <div class=\"card-body\">\r\n                          <h4 class=\"card-title\">{{recipe.recipeName}}</h4>\r\n                          <h4 class=\"rating card-text\">Rating:</h4>\r\n                          <span *ngFor=\"let rate of [].constructor(recipe.avgRate)\" class=\"fa fa-star\"></span>\r\n                      </div>\t\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { RecipeApiService } from '../recipe-api-service';\r\nimport { UserApiService } from '../user-api.service';\r\n\r\n@Component({\r\n  selector: 'app-user-account-page',\r\n  templateUrl: './user-account-page.component.html',\r\n  styleUrls: ['./user-account-page.component.css']\r\n})\r\nexport class UserAccountPageComponent {\r\n  public userApiService: UserApiService;\r\n  public recipeApiService: RecipeApiService;\r\n  \r\n  currentUser: any;\r\n  name:string;\r\n  email:string;\r\n  favoritelist:Array<string>;\r\n  ssoId:string;\r\n  listOfFavoritesAsRecipes:Array<any>;\r\n\r\n  constructor(public router : Router, private auth: UserApiService, service: RecipeApiService) { \r\n    this.favoritelist = [];\r\n    this.listOfFavoritesAsRecipes = [];\r\n    this.userApiService = auth;\r\n    this.recipeApiService = service;\r\n    this.auth.getUserProfile().subscribe(async data => {\r\n      this.currentUser = await JSON.parse(JSON.stringify(data));\r\n      this.name = this.currentUser.displayName;\r\n      this.email = this.currentUser.email;\r\n      this.ssoId = this.currentUser.userId;\r\n      this.populateFavoriteList();\r\n    });\r\n  }\r\n\r\n  populateFavoriteList() {\r\n    let userInfo:any;\r\n    this.auth.getSingleUser(this.ssoId).subscribe(async data => {\r\n      userInfo = await JSON.parse(JSON.stringify(data));\r\n      this.favoritelist = userInfo.favoriteList;\r\n      let recipe:any;\r\n      for(let recipeId of this.favoritelist) {\r\n        this.recipeApiService.getRecipeById(recipeId).subscribe(async data => {\r\n          recipe = await JSON.parse(JSON.stringify(data));\r\n          this.listOfFavoritesAsRecipes.push(recipe);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  logMeOut(){\r\n     this.userApiService.logout().subscribe(async res =>  {\r\n      console.log('Successfully logged out');\r\n      await this.router.navigate(['/home']);\r\n      location.reload();\r\n    });\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\"\r\nimport { Observable } from  'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserApiService {\r\n  path:string = '/users';\r\n  body:any;\r\n\r\n  constructor(private http: HttpClient){}\r\n  \r\n  addUser(body:any) {\r\n    console.warn(body);\r\n    return this.http.post(this.path, body);\r\n  }\r\n\r\n  getAllUsers() {\r\n    return this.http.get(this.path);\r\n  } \r\n\r\n  getUserProfile() {\r\n    return this.http.get(this.path + \"/auth/user\");\r\n  }\r\n\r\n  getStatus(): Observable<string>  {\r\n    return this.http.get<string>(this.path + \"/loggedIn\");\r\n  } \r\n\r\n  logout() {\r\n    return this.http.get(this.path + \"/logout\");\r\n  }\r\n\r\n  getSingleUser(ssoId:string) {\r\n    console.log(\"the sso id after being passed is: \" + ssoId);\r\n    return this.http.get(this.path + \"/ssoId/\" + ssoId);\r\n  }\r\n  \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReviewApiService {\r\n\r\n  path:string = '/reviews/';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  postReview(body: any, recipeId: string) {\r\n    console.log(\"The body is: \" + JSON.stringify(body));\r\n    console.log(\"The recipeid is: \" + recipeId);\r\n    return this.http.post(this.path + recipeId, body);\r\n  }\r\n}\r\n","<br>\r\n<br>\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <div class=\"input-group\">\r\n                <select (change)=\"onSelectIngredient($event.target.value)\" class=\"custom-select\" id=\"Ingredient\">\r\n                  <option selected>Choose...</option>\r\n                  <option  *ngFor=\"let ingredient of ingredientsArray\"  value=\"{{ingredient}}\">{{ingredient}}</option> \r\n                </select>\r\n            </div>\r\n            <br>\r\n            <br>\r\n    \r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <li *ngFor=\"let selectedIngredient of selectedIngredients\">{{selectedIngredient}}<span class=\"pull-right\"><button (click)=\"removeIngredient(selectedIngredient)\" id=\"remove-icon\"><i class=\"fas fa-trash\"></i></button></span><hr></li>\r\n                </div>\r\n            </div>\r\n    \r\n            <br>\r\n            <div>\r\n                <button (click)=\"clearList()\" class=\"btn btn-light\">Reset</button>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n            <div>\r\n                <ul class=\"list-group\">\r\n                     <li *ngFor=\"let result of resultArray\" class=\"list-group-item\">\r\n                        <a [routerLink]=\"['/showRecipe', result.recipeId]\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-3\">\r\n                                    <img src=\"{{result.recipeImage}}\" alt=\"\" class=\"img-thumbnail\"/>\r\n                                </div>\r\n                                <div class=\"col-md-9\">\r\n                                    <div class=\"result-text\">\r\n                                        <p>{{result.recipeName}}</p>\r\n                                        <p>Rating: <i *ngFor=\"let rate of [].constructor(result.avgRate)\" id=\"star-icon\" class=\"fas fa-star\"></i></p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component } from '@angular/core';\r\nimport { IngredientApiService } from '../ingredient-api.service';\r\nimport { RecipeApiService} from '../recipe-api-service';\r\n\r\n@Component({\r\n  selector: 'app-search-by-ingredients',\r\n  templateUrl: './search-by-ingredients.component.html',\r\n  styleUrls: ['./search-by-ingredients.component.css']\r\n})\r\nexport class SearchByIngredientsComponent {\r\n  public ingredientsArray: Array<string>;\r\n  public selectedIngredients: Set<string>;\r\n  public resultArray: any;\r\n  public recipeApiService: RecipeApiService;\r\n  public ingredientApiService: IngredientApiService;\r\n\r\n  constructor(Recipeservice: RecipeApiService, IngredientService: IngredientApiService) {\r\n    this.ingredientsArray = [];\r\n    this.selectedIngredients = new Set;\r\n    this.resultArray = [];\r\n    this.recipeApiService = Recipeservice;\r\n    this.ingredientApiService = IngredientService\r\n\r\n    this.getIngredient();\r\n   }\r\n\r\n   getIngredient() {\r\n     this.ingredientApiService.getIngredients().subscribe((result:any) => {\r\n      for (let ingredient of result[0].ingredientName) {\r\n        this.ingredientsArray.push(ingredient);\r\n      }\r\n     })\r\n   }\r\n\r\n   onSelectIngredient(ingredient: any) {\r\n     this.selectedIngredients.add(ingredient);\r\n     this.getResultFromIngredient();\r\n   }\r\n\r\n   clearList() {\r\n     this.selectedIngredients = new Set;\r\n     this.resultArray = [];\r\n   }\r\n\r\n   removeIngredient(ingredient: any) {\r\n     this.selectedIngredients.delete(ingredient);\r\n     this.getResultFromIngredient();\r\n   }\r\n\r\n   getResultFromIngredient() {\r\n    if (this.selectedIngredients.size != 0) {\r\n      this.recipeApiService.searchByIngredients(this.selectedIngredients).subscribe((result: any) => {\r\n        this.resultArray = result;\r\n      })\r\n    } else {\r\n      this.resultArray = [];\r\n    }\r\n   }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from \"@angular/common/http\"\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IngredientApiService {\r\n\r\n  path:string = '/ingredients';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getIngredients() {\r\n    return this.http.get(this.path);\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { RecipeApiService } from '../recipe-api-service'\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ReviewApiService } from '../review-api.service';\r\nimport { Router } from '@angular/router';\r\nimport { UUID } from 'angular2-uuid';\r\nimport { UserApiService } from '../user-api.service';\r\n\r\n@Component({\r\n  selector: 'app-show-recipe',\r\n  templateUrl: './show-recipe.component.html',\r\n  styleUrls: ['./show-recipe.component.css']\r\n})\r\nexport class ShowRecipeComponent {\r\n  public recipeApiService: RecipeApiService;\r\n  public reviewApiService: ReviewApiService;\r\n  public recipe: any;\r\n  public reviews: any;\r\n\r\n  private sub: any;\r\n  id: string;\r\n  ssoId: any;\r\n  currentUser: any;\r\n  starRating = 0;\r\n\r\n  constructor(service: RecipeApiService, private route: ActivatedRoute, reviewService: ReviewApiService, public router : Router, private auth: UserApiService) { \r\n    this.recipeApiService = service;\r\n    this.reviewApiService = reviewService;\r\n\r\n    this.sub = this.route.params.subscribe(params => {\r\n      this.id = params['id'];\r\n    });\r\n\r\n    this.recipeApiService.getRecipeById(this.id).subscribe((result: any) =>\r\n    {\r\n        this.recipe = result;\r\n    });\r\n\r\n    this.recipeApiService.getReviewsForRecipe(this.id).subscribe((result: any) =>\r\n    {\r\n        this.reviews = result;\r\n    });\r\n\r\n    this.auth.getUserProfile().subscribe(async data => {\r\n      this.currentUser = await JSON.parse(JSON.stringify(data));\r\n      this.ssoId = this.currentUser.userId;\r\n    });\r\n  }\r\n\r\n  sendReview(userComment:string, starRating:any) {\r\n    const body = {\r\n      \"reviewId\": UUID.UUID(),\r\n      \"comment\": userComment,\r\n      \"writer\": this.ssoId,\r\n      \"date\": new Date().toLocaleDateString(),\r\n      \"rate\": starRating\r\n    }\r\n\r\n    this.reviewApiService.postReview(body, this.id).subscribe(async res =>\r\n    {\r\n      console.log('Successfully posted');\r\n      await this.router.navigate(['/showRecipe/' + this.id]);\r\n      location.reload();\r\n    });\r\n  }\r\n}","<br>\r\n<br>\r\n<div class=\"row\">\r\n    <div class=\"col-auto\">\r\n        <h2 class=\"pull-left\">{{recipe.recipeName}}</h2>\r\n        <button mat-icon-button disabled class=\"pull-right\">\r\n            <mat-icon>favorite</mat-icon>\r\n        </button>\r\n    </div>\r\n</div>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <mat-card class=\"example-card\">\r\n                <img mat-card-image src={{recipe.recipeImage}} alt=\"Photo of the recipe\">\r\n            </mat-card>\r\n            <br><br><br>\r\n            <mat-card class=\"example-card\">\r\n                <mat-card-header>\r\n                <div mat-card-avatar class=\"example-header-image\"></div>\r\n                <mat-card-title>Leave a Comment and a Rating</mat-card-title>\r\n                </mat-card-header>\r\n                <mat-card-content>\r\n                    <mat-form-field class=\"example-full-width\">\r\n                        <mat-label>Leave a comment</mat-label>\r\n                        <textarea #userComment matInput placeholder=\"Ex. I love this recipe\"></textarea>\r\n                    </mat-form-field>\r\n                    <ngb-rating [max]=\"5\" [(rate)]=\"starRating\" [readonly]=\"false\"></ngb-rating>\r\n                </mat-card-content>\r\n                <mat-card-actions>\r\n                    <button mat-raised-button color=\"primary\" (click)=\"sendReview(userComment.value, starRating)\">Submit</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n        </div> \r\n        <div class=\"col\">\r\n            <mat-tab-group mat-align-tabs=\"start\">\r\n                <mat-tab label=\"Description\">\r\n                    <p>\r\n                        {{recipe.description}} \r\n                    </p> \r\n                    <p>\r\n                        <b>Required Ingredients:</b>\r\n                    </p>\r\n                    <ul>\r\n                        <li *ngFor=\"let ingredient of recipe.ingredientList\">{{ingredient}}</li>\r\n                    </ul>\r\n                </mat-tab>\r\n                <mat-tab label=\"Instructions\">\r\n                    <p *ngFor=\"let recipe of recipe.instruction; let i = index\">\r\n                        <b>Step {{i +1}}</b>: {{recipe}}\r\n                    </p> \r\n                </mat-tab>\r\n                <mat-tab label=\"Video\"> \r\n                    <youtube-player \r\n                        videoId=\"{{recipe.videoLink}}\" \r\n                        suggestedQuality=\"highres\" \r\n                        [height]=\"250\" \r\n                        [width]=\"500\" >\r\n                    </youtube-player>\r\n                </mat-tab>\r\n                <mat-tab label=\"Comments\">\r\n                    <mat-card class=\"mat-elevation-z0 outline\" *ngFor=\"let review of reviews;\">\r\n                        <mat-card-header>\r\n                        <mat-card-title>Rating: {{review.rate}}</mat-card-title>\r\n                        <mat-card-subtitle>{{review.date}}</mat-card-subtitle>\r\n                        </mat-card-header>\r\n                        <mat-card-content>\r\n                        <p>\r\n                            {{review.comment}}\r\n                        </p>\r\n                        </mat-card-content>\r\n                    </mat-card>\r\n                </mat-tab>\r\n            </mat-tab-group>\r\n        </div>    \r\n    </div>\r\n</div>  ","<br />\r\n\t\t<h1><b>Top 10</b></h1>\r\n<br />\r\n\r\n<mat-form-field appearance=\"fill\">\r\n  <mat-label>by</mat-label>\r\n  <mat-select (selectionChange)=\"onSelect()\" [(value)]=\"selected\">\r\n    <mat-option value=\"Rating\">Rating</mat-option>\r\n    <mat-option value=\"Views\">Views</mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n\r\n<br />\r\n<br />\t\t  \r\n<div class=\"row\">\r\n    <div class=\"col-lg-4 col-sm-6\" *ngFor=\"let recipe of recipes; let i = index\">\r\n      <div class=\"card border-dark\" id=\"homepagecard\">\r\n        <img class=\"card-img-top\" src={{recipe.recipeImage}} alt=\"Card image cap\" width=\"100\" height=\"250\">\r\n          <div class=\"card-body\">\r\n              <h4 class=\"card-title\">Name: {{recipe.recipeName}}</h4>\r\n              <h4 class=\"rating card-text\">Rating:</h4>\r\n              <span *ngFor=\"let rate of [].constructor(recipe.avgRate)\" class=\"fa fa-star\"></span>\r\n              <h4>Views: {{recipe.viewers}}</h4>\r\n\r\n\r\n              <div class=\"col-md-12 text-center\">\r\n                  <a [routerLink]=\"['/showRecipe', recipe.recipeId]\" class=\"btn btn-primary btn-lg\">View</a>\r\n              </div>\r\n          </div>\t\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n","import { Component } from '@angular/core';\r\nimport { RecipeApiService } from '../recipe-api-service'\r\n\r\n@Component({\r\n  selector: 'app-homepage',\r\n  templateUrl: './homepage.component.html',\r\n  styleUrls: ['./homepage.component.css']\r\n})\r\nexport class HomepageComponent {\r\n  recipes : any;\r\n  selected: any;\r\n  recipeService: RecipeApiService;\r\n\r\n  constructor(recipeService: RecipeApiService) {\r\n    this.selected = 'Rating'\r\n    this.recipeService = recipeService;\r\n\r\n    this.onSelect();\r\n  }\r\n\r\n  onSelect() {\r\n    this.recipeService.getTopTenRecipe(this.selected).subscribe((result: any) => {\r\n      this.recipes = result;\r\n    })\r\n  }\r\n}\r\n","<div class=\"NavBarContainer\">\r\n  <div class=\"container\">\r\n\r\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      \r\n    <a class=\"navbar-brand\" [routerLink]=\"['']\">Fridge Buddy</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/byIngredient']\">Search by Ingredient</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLink]=\"['/byCuisine']\">Search by Cuisine</a>\r\n        </li>\r\n      </ul>\r\n      <ul class=\"navbar-nav ml-auto\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" *ngIf=\"isLoggedIn == false\" href=\"/#/login\" >Login / Sign Up</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" *ngIf=\"isLoggedIn == true\" href=\"/#/account\" >{{currentUser}}</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    </nav>\r\n\r\n    <router-outlet></router-outlet>\r\n  </div>  \r\n\r\n</div>","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserApiService } from './user-api.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent  {\r\n  title = 'FridgeBuddy';\r\n  isLoggedIn: boolean = false; \r\n  currentUser: any;\r\n\r\n  constructor(public router : Router, private auth: UserApiService) {\r\n    console.log(\"app.component.ts: \" + this.isLoggedIn); \r\n    this.auth.getStatus().subscribe(res => {\r\n      this.isLoggedIn = (/true/i).test(res);\r\n      console.log(\"Inside here \" + this.isLoggedIn);\r\n      if(this.isLoggedIn){\r\n        this.auth.getUserProfile().subscribe(data => {\r\n          this.currentUser = JSON.parse(JSON.stringify(data));\r\n          this.currentUser = 'Hi, '+ this.currentUser.displayName;\r\n        })\r\n      } else {\r\n        this.currentUser = \"Login\";\r\n        this.isLoggedIn = false;\r\n      }\r\n    })\r\n  }\r\n\r\n  ChangeLoginStats() {\r\n    if(this.currentUser != \"Login / Sign Up\") {\r\n      this.router.navigate(['/account']);\r\n    } else {\r\n       this.currentUser = \"Login / Sign Up\";\r\n       this.router.navigate(['/login']);\r\n    }\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core'\r\nimport { HttpClient } from \"@angular/common/http\"\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RecipeApiService{\r\n  path:string = '/recipes';\r\n\r\n  constructor(private http: HttpClient){}\r\n\r\n  getRecipes() {\r\n      return this.http.get(this.path);\r\n  }\r\n\r\n  searchByIngredients(ingredientsArray: Set<string>) {\r\n    let query = '';\r\n\r\n    for (let ingredient of ingredientsArray) {\r\n      let temp = 'array=' + ingredient + '&';\r\n      query += temp;\r\n    }\r\n\r\n    return this.http.get(this.path + '/byIngredients?' + query);\r\n  }\r\n\r\n  searchByCuisine(cuisine: string) {\r\n    return this.http.get(this.path + '/byCuisine/' + cuisine);\r\n  }\r\n\r\n  getRecipeById(recipeId: string) {\r\n    return this.http.get(this.path + '/find/' + recipeId);\r\n  }\r\n\r\n  getReviewsForRecipe(recipeId: string) {\r\n    return this.http.get(this.path + '/getReviewList/' + recipeId);\r\n  }\r\n\r\n  getTopTenRecipe(filter: string) {\r\n    return this.http.get(this.path + '/topTenBy' + filter);\r\n  }\r\n  \r\n}","import { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\nimport { SearchByIngredientsComponent } from './search-by-ingredients/search-by-ingredients.component';\r\nimport { SearchByCuisineComponent } from './search-by-cuisine/search-by-cuisine.component';\r\nimport { ShowRecipeComponent } from './show-recipe/show-recipe.component';\r\nimport { LoginPageComponent } from './login-page/login-page.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { YouTubePlayerModule } from \"@angular/youtube-player\";\r\nimport { UserAccountPageComponent } from './user-account-page/user-account-page.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomepageComponent,\r\n    SearchByIngredientsComponent,\r\n    SearchByCuisineComponent,\r\n    ShowRecipeComponent,\r\n    LoginPageComponent,\r\n    UserAccountPageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTabsModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    YouTubePlayerModule,\r\n    NgbModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UserApiService } from '../user-api.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.css']\r\n})\r\nexport class LoginPageComponent implements OnInit  { \r\n  body:any;\r\n  allUsers:any;\r\n  userService: UserApiService\r\n  Router: any;\r\n\r\n  constructor(userService: UserApiService, Router: Router) {\r\n    this.userService = userService;\r\n    // this.onSelect();\r\n    this.Router = Router;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n}\r\n","\r\n<div class=\"container\">\r\n    <br />\r\n    <br />\r\n    <br />\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-8 col-sm-offset-2 text\">\r\n            <h1><strong>Welcome to Fridge Buddy!</strong></h1>\r\n        </div>\r\n    </div>\r\n    \r\n    <div class=\"row\">\r\n        <div class=\"col-sm-6 col-sm-offset-3 form-box\">\r\n            <div class=\"form-top\">            \r\n                <div class=\"form-top-right\">\r\n                    <i class=\"fa fa-key\"></i>\r\n                </div>\r\n            </div>\r\n            <a class=\"btn btn-lg btn-lg\" href=\"/auth/google\" role=\"button\">Google Login</a>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\nimport {LoginPageComponent} from './login-page/login-page.component';\r\nimport { SearchByIngredientsComponent } from './search-by-ingredients/search-by-ingredients.component';\r\nimport { SearchByCuisineComponent } from './search-by-cuisine/search-by-cuisine.component';\r\nimport { ShowRecipeComponent } from './show-recipe/show-recipe.component';\r\nimport { UserAccountPageComponent } from './user-account-page/user-account-page.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomepageComponent },\r\n  { path: 'home', component: HomepageComponent },\r\n  { path: 'byIngredient', component: SearchByIngredientsComponent },\r\n  { path: 'byCuisine', component: SearchByCuisineComponent },\r\n  { path: 'showRecipe/:id', component: ShowRecipeComponent },\r\n  { path: 'login', component: LoginPageComponent },\r\n  { path: 'account', component: UserAccountPageComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}